# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

.deploy-anchor: &deploy
  - echo "export const S4_BUILD_NUM = '$CI_PIPELINE_ID'" > build-info.js
  - echo "export const S4_COMMIT = '$CI_COMMIT_SHORT_SHA'" >> build-info.js
  - echo "export const CORE_WS = '$CORE_WS';" > env_spec.js
  - npm run generate
  - cd dist
  - ncftpput -avR -u $FTP_USER -p$FTP_PWD $FTP_SERVER $FTP_PATH .

before_script:
  - npm install

stages:          # List of stages for jobs, and their order of execution
  - build-test
  - staging
  - deploy

unit-test-job:   # This job runs in the test stage.
  stage: build-test    # It only starts when the job in the build stage completes successfully.
  script:
    - npm run test

lint-job:   # This job also runs in the test stage.
  stage: build-test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - npm run lint:js
    #- npm run lint:prettier - twrows an error fsomewhy

deploy-to-test:      # This job runs in the deploy stage.
  stage: staging  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  environment: test
  script:
    - echo "Deploying to test"
    - *deploy

deploy-to-prod:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  environment: production
  script:
    - echo "Deploying to prod"
    - *deploy
